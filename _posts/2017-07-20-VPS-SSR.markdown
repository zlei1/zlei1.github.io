---
layout: post
title: "VPS上搭建SSR"
date: 2017-07-20
categories: ss
---

#### [github](https://github.com/breakwa11/shadowsocks-rss)

#### 参考
[科学上网教程](https://jasper-1024.github.io/2016/06/26/VPS%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97/)
[逗比根据地](https://doub.io/)

linux安装
```ruby
wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh
chmod +x shadowsocksR.sh
./shadowsocksR.sh 2>&1 | tee shadowsocksR.log
```


shadowsocks.json配置
```ruby
{
  "server":"0.0.0.0",
  "server_ipv6":"::",
  "local_address":"127.0.0.1",
  "local_port":1080,
  "port_password":{
   #纯 SS 不带混淆 端口25 密码为123456.
   "25":"123456",
   #端口443，密码123456 ，protocol选择auth_chain_a。obfs选择tls1.2_ticket_auth
   "443":{"protocol":"auth_chain_a", "password":"123456", "obfs":"tls1.2_ticket_auth", "obfs_param":""},
   #注意无论怎么变化，最后一个端口设置，不带逗号！
   "3389":{"protocol":"auth_aes128_md5", "password":"123456", "obfs":"tls1.2_ticket_auth", "obfs_param":""}#此处没有逗号！
  },
  "timeout":400,
  #默认全局的加密方式，即上边各个端口的默认加密方式。一般为aes-256-cfb，		此处，选择为chacha20，移动设备性能较好。
  "method":"chacha20",
  #protocol.协议定义插件的默认值，origin即使用原版SS协议，不混淆。即上面端口配置中，你没有设置 protocol 和 obfs 情况下，使用的默认值。
  "protocol": "origin",
  "protocol_param": "",
  #protocol.协议定义插件的默认值，plain即使用原协议，不混淆。
  "obfs": "plain",
  "obfs_param": "",
  "redirect": "",
  "dns_ipv6": false,
  #TCP FAST OPEN ，打开
  "fast_open": true,
 "workers": 1
}
```

无注释版本
```ruby
{
  "server":"0.0.0.0",
  "server_ipv6":"::",
  "local_address":"127.0.0.1",
  "local_port":1080,
  "port_password":{
   	"25":"123456",
      "443":{"protocol":"auth_chain_a", "password":"123456", "obfs":"tls1.2_ticket_auth", "obfs_param":""},
      "3389":{"protocol":"auth_aes128_md5", "password":"123456", "obfs":"tls1.2_ticket_auth", "obfs_param":""}
  },
  "timeout":400,
  "method":"chacha20",
  "protocol": "origin",
  "protocol_param": "",
  "obfs": "plain",
  "obfs_param": "",
  "redirect": "",
  "dns_ipv6": false,
  "fast_open": true,
  "workers": 1
}
```

重启SSR
```ruby
/etc/init.d/shadowsocks restart
```

更新SSR 需先另存shadowsocks.json文件
```ruby
./shadowsocksR.sh uninstall
```
之后重新执行安装脚本即可

混淆插件简介
```ruby
ShadowsocksR目前支持的混淆插件（此类型的插件用于定义加密后的通信协议）：
plain ,http_simple ,http_post,random_head ,tls1.2_ticketauth 协议定义插件(用于定义加密前的协议): origin, auth_sha1, auth_sha1_v2, auth_sha1_v4, auth_aes128_md5/auth_aes128_sha1

auth_aes128_md5/auth_aes128_sha1 支持 单端口多用户，即一个端口 可以配置 几个不同的密码
```

[ShadowsocksR 协议插件文档](https://github.com/breakwa11/shadowsocks-rss/blob/master/ssr.md)

[官方 ShadowsocksR单端口多用户配置方法](https://breakwa11.blogspot.ru/2017/01/shadowsocksr-mu.html?m=1)
